@model AccessManager.ViewModels.IPagedResult

@{
    var query = new Dictionary<string, object>(
        ViewContext.HttpContext.Request.Query
            .ToDictionary(k => k.Key, v => (object)v.Value.ToString())
    );

    int currentPage = Model.Page;
    int totalPages = Model.TotalPages;
    string pageParam = "page";
    int blockSize = 10;

    // Current block
    int currentBlock = (currentPage - 1) / blockSize;
    int startPage = currentBlock * blockSize + 1;
    int endPage = Math.Min(startPage + blockSize - 1, totalPages);

    int prevBlockPage = startPage - 1;
    int nextBlockPage = endPage + 1;
}

@if (totalPages > 1)
{
    <nav>
        <ul class="pagination justify-content-center mt-4">

            <!-- Previous page -->
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                @{
                    query[pageParam] = currentPage - 1;
                }
                <a class="page-link" href="@Url.Action(null, query)">Предишна</a>
            </li>

            <!-- First page + ellipsis if not in first block -->
            @if (startPage > 1)
            {
                query[pageParam] = 1;
                <li class="page-item">
                    <a class="page-link" href="@Url.Action(null, query)">1</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action(null, new Dictionary<string, object>(query) { [pageParam] = prevBlockPage })">...</a>
                </li>
            }

            <!-- Current block pages -->
            @for (int i = startPage; i <= endPage; i++)
            {
                query[pageParam] = i;
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action(null, query)">@i</a>
                </li>
            }

            <!-- Next block ellipsis + last page -->
            @if (endPage < totalPages)
            {
                query[pageParam] = nextBlockPage;
                <li class="page-item">
                    <a class="page-link" href="@Url.Action(null, query)">...</a>
                </li>
                query[pageParam] = totalPages;
                <li class="page-item">
                    <a class="page-link" href="@Url.Action(null, query)">@totalPages</a>
                </li>
            }

            <!-- Next page -->
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                @{
                    query[pageParam] = currentPage + 1;
                }
                <a class="page-link" href="@Url.Action(null, query)">Следваща</a>
            </li>
        </ul>
    </nav>
}
