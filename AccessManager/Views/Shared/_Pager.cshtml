@model AccessManager.ViewModels.IPagedResult

@{
    int currentPage = Model.Page;
    int totalPages = Model.TotalPages;
    string pageParam = Model.PageParam ?? "page"; // fallback
    int blockSize = 10;

    int currentBlock = (currentPage - 1) / blockSize;
    int startPage = currentBlock * blockSize + 1;
    int endPage = Math.Min(startPage + blockSize - 1, totalPages);

    int prevBlockPage = startPage - 1;
    int nextBlockPage = endPage + 1;
}

@if (totalPages > 1)
{
    <nav>
        <ul class="pagination justify-content-center mt-4">
            <!-- Previous page -->
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <button type="button" class="page-link" data-page="@(currentPage - 1)">Предишна</button>
            </li>

            <!-- First page + ellipsis -->
            @if (startPage > 1)
            {
                <li class="page-item"><button type="button" class="page-link" data-page="1">1</button></li>
                <li class="page-item"><button type="button" class="page-link" data-page="@prevBlockPage">...</button></li>
            }

            <!-- Current block pages -->
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <button type="button" class="page-link" data-page="@i">@i</button>
                </li>
            }

            <!-- Next block + last page -->
            @if (endPage < totalPages)
            {
                <li class="page-item"><button type="button" class="page-link" data-page="@nextBlockPage">...</button></li>
                <li class="page-item"><button type="button" class="page-link" data-page="@totalPages">@totalPages</button></li>
            }

            <!-- Next page -->
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <button type="button" class="page-link" data-page="@(currentPage + 1)">Следваща</button>
            </li>
        </ul>
    </nav>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form'); // your big form
            if (!form) return;

            document.querySelectorAll('.pagination button[data-page]').forEach(btn => {
                btn.addEventListener('click', () => {
                    const pageValue = btn.dataset.page;
                    const pageParam = '@pageParam';

                    // remove old page input if exists
                    const oldInput = form.querySelector(`input[name="${pageParam}"]`);
                    if (oldInput) oldInput.remove();

                    // add new hidden input
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = pageParam;
                    input.value = pageValue;
                    form.appendChild(input);

                    // submit form preserving all other inputs
                    form.requestSubmit();
                });
            });
        });
    </script>
}
