@model AccessManager.ViewModels.Access.AccessListViewModel

@{
    ViewData["Title"] = "Достъпи";
}

<form style="display:none;">
    @Html.AntiForgeryToken()
</form>

<h2>Достъпи</h2>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@if (TempData["Success"] != null)
{
    <div class="text-success">@TempData["Success"]</div>
}

<form method="get" class="d-flex justify-content-start align-items-end gap-2 mb-3 wrapper" data-readonly="@(ViewBag.IsReadOnly != null && (bool)ViewBag.IsReadOnly ? "true" : "false")">
    <filter form-id="AccessFilterForm"
            label="Филтър по достъп"
            controller="Access"
            action="SearchAccesses"
            hidden-input-id="filterAccess"
            hidden-name="filterAccessId"
            filter-id="@Model.FilterAccessId"
            filter-description="@Model.FilterAccessDescription">
    </filter>

    <div>
        @if (Model.WriteAuthority >= AccessManager.Data.Enums.AuthorityType.Full)
        {
            <a asp-controller="Access" asp-action="CreateAccess" class="btn btn-success">
                Добави нов достъп
            </a>
            <a asp-controller="File" asp-action="AccessesCsv" class="btn btn-primary">
                Експортирай CSV
            </a>
        }
        @if (Model.WriteAuthority >= AccessManager.Data.Enums.AuthorityType.SuperAdmin)
        {
            <a asp-controller="Access" asp-action="DeletedAccesses" class="btn btn-danger">
                Виж изтритите достъпи
            </a>
        }
    </div>
</form>

<table class="table table-bordered table-striped">
    <thead class="table-light">
        <tr>
            <th>Име</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var access in Model.Accesses.Items)
        {
            <tr>
                <td>@access.Description</td>
                @if (Model.WriteAuthority >= AccessManager.Data.Enums.AuthorityType.Restricted)
                {
                    <td>
                        <a asp-controller="Access" asp-action="EditAccess" asp-route-accessid="@access.AccessId" class="btn btn-sm btn-info">
                            Редактирай
                        </a>
                    </td>
                    <td>
                        <form asp-controller="Access" asp-action="SoftDeleteAccess" method="post" asp-route-id="@access.AccessId">
                            <button type="submit" class="btn btn-sm btn-danger">
                                Изтрий
                            </button>
                        </form>
                    </td>

                }
            </tr>
        }
    </tbody>
</table>


@await Html.PartialAsync("~/Views/Shared/_Pager.cshtml", Model.Accesses)

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/wrapper-is-readonly.js" asp-append-version="true"></script>
    <script src="~/js/filter.js" asp-append-version="true"></script>
}
